plugins {
    id 'java'
    id 'idea'
    id "org.springframework.boot" version '2.4.0'
    id 'war'
}

def springBootVersion = '2.4.0'
def jUnitVersion = '5.7.0'
def lombokVersion = '1.18.16'

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    developmentOnly group: 'org.springframework.boot', name: 'spring-boot-devtools', version: springBootVersion
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-redis', version: springBootVersion

    compile group: 'redis.clients', name: 'jedis', version: '3.3.0'
    compile group: 'com.google.guava', name: 'guava', version: '30.0-jre'
    compile group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'

    providedCompile group: 'org.projectlombok', name: 'lombok', version: lombokVersion
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion

    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: jUnitVersion
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: jUnitVersion
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.18.1'

    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion
    testCompile group: 'com.h2database', name: 'h2', version: '1.4.200'
    testCompile group: 'com.github.kstyrc', name: 'embedded-redis', version: '0.6'
}

sourceSets {
    integrationTest {
        java.srcDir file('src/integrationTest/java')
        resources.srcDir file('src/integrationTest/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntime
        runtimeClasspath += output + compileClasspath
    }
}

idea {
    module {
        def integrationTestFile = file('src/integrationTest/java')

        sourceDirs -= integrationTestFile
        testSourceDirs += integrationTestFile
    }
}

test {
    useJUnitPlatform()
}


task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    mustRunAfter test
}

integrationTest {
    useJUnitPlatform()
}
